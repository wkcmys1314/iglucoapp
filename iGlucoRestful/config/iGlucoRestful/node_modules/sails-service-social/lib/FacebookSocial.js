'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _fb = require('fb');

var _fb2 = _interopRequireDefault(_fb);

var _BaseSocial2 = require('./BaseSocial');

var _BaseSocial3 = _interopRequireDefault(_BaseSocial2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var FacebookSocial = function (_BaseSocial) {
  _inherits(FacebookSocial, _BaseSocial);

  function FacebookSocial(config) {
    _classCallCheck(this, FacebookSocial);

    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(FacebookSocial).call(this, config));

    _this.setProvider(_fb2.default);
    return _this;
  }

  /**
   * Get profile from Facebook
   * @param {String} [_accessToken] Facebook access token
   * @param {Object} [_config] Additional config for request
   * @returns {Promise}
   */

  _createClass(FacebookSocial, [{
    key: 'getProfile',
    value: function getProfile(_accessToken, _config) {
      var _this2 = this;

      var accessToken = _accessToken || this.get('accessToken') || '';
      var config = _lodash2.default.merge({ fields: ['id', 'name', 'email'] }, _lodash2.default.omit(this.get(), 'accessToken'), _config);

      this.getProvider().setAccessToken(accessToken);

      return new Promise(function (resolve, reject) {
        _this2.getProvider().api('me', config, function (response) {
          return response.error ? reject(response.error) : resolve(response);
        });
      });
    }

    /**
     * Get friends from Facebook
     * @param {String} [_accessToken] Facebook access token
     * @param {Object} [_config] Additional config for request
     * @returns {Promise}
     */

  }, {
    key: 'getFriends',
    value: function getFriends(_accessToken, _config) {
      var _this3 = this;

      var accessToken = _accessToken || this.get('accessToken') || '';
      var config = _lodash2.default.merge({}, _lodash2.default.omit(this.get(), 'accessToken'), _config);

      this.getProvider().setAccessToken(accessToken);

      return new Promise(function (resolve, reject) {
        _this3.getProvider().api('me/friends', config, function (response) {
          return response.error ? reject(response.error) : resolve(response.data);
        });
      });
    }

    /**
     * Get photos from Facebook
     * @param {String} [_accessToken] Facebook access token
     * @param {Object} [_config] Additional config for request
     * @returns {Promise}
     */

  }, {
    key: 'getPhotos',
    value: function getPhotos(_accessToken, _config) {
      var _this4 = this;

      var accessToken = _accessToken || this.get('accessToken') || '';
      var config = _lodash2.default.merge({}, _lodash2.default.omit(this.get(), 'accessToken'), _config);

      this.getProvider().setAccessToken(accessToken);

      return new Promise(function (resolve, reject) {
        _this4.getProvider().api('me/photos', config, function (response) {
          return response.error ? reject(response.error) : resolve(response.data);
        });
      });
    }

    /**
     * Get posts from Facebook
     * @param {String} [_accessToken] Facebook access token
     * @param {Object} [_config] Additional config for request
     * @returns {Promise}
     */

  }, {
    key: 'getPosts',
    value: function getPosts(_accessToken, _config) {
      var _this5 = this;

      var accessToken = _accessToken || this.get('accessToken') || '';
      var config = _lodash2.default.merge({}, _lodash2.default.omit(this.get(), 'accessToken'), _config);

      this.getProvider().setAccessToken(accessToken);

      return new Promise(function (resolve, reject) {
        _this5.getProvider().api('me/posts', config, function (response) {
          return response.error ? reject(response.error) : resolve(response.data);
        });
      });
    }
  }]);

  return FacebookSocial;
}(_BaseSocial3.default);

exports.default = FacebookSocial;
module.exports = exports['default'];